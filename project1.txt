from tkinter import *
import tkinter.messagebox as MessageBox
import mysql.connector as my
class blood_bank:
    def __init__(self,root):
        

        self.root=root
        self.root.title("BLOOD BANK MANAGMENT")
        self.root.geometry("1325x690")
        self.root.config(bg="yellow")
        Name=StringVar()
        Adress=StringVar()
        contact=StringVar()
        Age=StringVar()
        weight=StringVar()
        Blood_group=StringVar()
        userid=StringVar()
        def insert():
            Name=self.txtname.get()
            Adress=self.txt_AD.get()
            contact=self.txt_cont.get()
            Age=self.txt_age.get()
            weight=self.txt_wt.get()
            Blood_group=self.txt_bl.get()
            userid=self.txt_id.get()
            if(Name=="" or Adress=="" or contact=="" or Age=="" or weight=="" or Blood_group=="" or userid==""):
                MessageBox.showinfo("Insert Status","All feilds are require")
            else:
                mydb=my.connect(host="localhost",user="root",password="",database="blood_bank")
                cursor=mydb.cursor()
                cursor.execute("Insert into lifeline Values('"+ Name +"','"+ Adress +"','"+ contact +"','"+ Age +"','"+ weight +"','"+ Blood_group +"','"+ userid +"')")
                cursor.execute("commit")
                self.txtname.delete(0,'end')
                self.txt_AD.delete(0,'end')
                self.txt_cont.delete(0,'end')
                self.txt_age.delete(0,'end')
                self.txt_wt.delete(0,'end')
                self.txt_bl.delete(0,'end')
                self.txt_id.delete(0,'end')
                show()
                MessageBox.showinfo("Insert Status","inserted successfuly")
                mydb.close()
        def delet():
            if(self.txt_id.get()==""):
                MessageBox.showinfo("Delet status","userid is needed for delet")
            else:
                mydb=my.connect(host="localhost",user="root",password="",database="blood_bank")
                cursor=mydb.cursor()
                cursor.execute("delete from lifeline where userid='"+ self.txt_id.get() +"'")
                cursor.execute("commit")
                self.txtname.delete(0,'end')
                self.txt_AD.delete(0,'end')
                self.txt_cont.delete(0,'end')
                self.txt_age.delete(0,'end')
                self.txt_wt.delete(0,'end')
                self.txt_bl.delete(0,'end')
                self.txt_id.delete(0,'end')
                MessageBox.showinfo("Delete Status","deleted successfuly")
                mydb.close()
        def update():
            Name=self.txtname.get()
            Adress=self.txt_AD.get()
            contact=self.txt_cont.get()
            Age=self.txt_age.get()
            weight=self.txt_wt.get()
            Blood_group=self.txt_bl.get()
            userid=self.txt_id.get()
            if(Name=="" or Adress=="" or contact=="" or Age=="" or weight=="" or Blood_group=="" or userid==""):
                MessageBox.showinfo("Update Status","All feilds are require")
            else:
                mydb=my.connect(host="localhost",user="root",password="",database="blood_bank")
                cursor=mydb.cursor()
                cursor.execute("update lifeline set Name='"+ Name +"',Adress='"+ Adress +"',contact='"+ contact +"',Age='"+ Age +"',weight='"+ weight +"',Blood_group='"+ Blood_group +"' where userid='"+ userid +"'")
                cursor.execute("commit")
                self.txtname.delete(0,'end')
                self.txt_AD.delete(0,'end')
                self.txt_cont.delete(0,'end')
                self.txt_age.delete(0,'end')
                self.txt_wt.delete(0,'end')
                self.txt_bl.delete(0,'end')
                self.txt_id.delete(0,'end')
                MessageBox.showinfo("Update Status","Update successfuly")
                mydb.close()
        def search():
            if(self.txt_id.get()==""):
                MessageBox.showinfo("search status","userid is needed for search")
            else:
                mydb=my.connect(host="localhost",user="root",password="",database="blood_bank")
                cursor=mydb.cursor()
                cursor.execute("select * from lifeline where userid='"+ self.txt_id.get() +"'")
                rows=cursor.fetchall()
                for i in rows:
                    self.txtname.insert(0,i[1])
                    self.txt_AD.insert(0,i[2])
                    self.txt_cont.insert(0,i[3])
                    self.txt_age.insert(0,i[4])
                    self.txt_wt.insert(0,i[5])
                    self.txt_bl.insert(0,i[6])
                    mydb.close()
        def show():
            mydb=my.connect(host="localhost",user="root",password="",database="blood_bank")
            cursor=mydb.cursor()
            cursor.execute("select * from lifeline")
            rows=cursor.fetchall()
            donor_list.delete(0,donor_list.size())

            for i in rows:
                insertData=str(i[0])+'      '+i[1]
                donor_list.insert(donor_list.size()+1,insertData)
                mydb.close()


        MainFrame=Frame(self.root,bg="red")
        MainFrame.grid()
        head_frame=Frame(MainFrame ,bd=2, padx=50, pady=10, bg="white", relief=RIDGE)
        head_frame.pack(side=TOP)
        self.lab1=Label(head_frame, font=("italic",50,"bold"),fg="red",text=" * LIFE SAVER INFORMATION SYSTEM * ",bg="white")
        self.lab1.grid()
        frame_bottom=Frame(MainFrame,width=1300,height=60,bd=2,padx=70,pady=20,bg="white",relief=RIDGE)
        frame_bottom.pack(side=BOTTOM)
        frame_middle=Frame(MainFrame,width=1300,height=400,bd=2,padx=30,pady=20,bg="white",relief=RIDGE)
        frame_middle.pack(side=BOTTOM)
        mid_left=LabelFrame(frame_middle,width=800,height=380,bd=2,padx=20,pady=10,bg="yellow",relief=RIDGE,font=("italic",15,"bold"),text="Personal Details")
        mid_left.pack(side=LEFT)
        mid_right=LabelFrame(frame_middle,width=400,height=380,bd=2,padx=20,pady=10,bg="yellow",relief=RIDGE,font=("italic",15,"bold"),text="Personal Details")
        mid_right.pack(side=RIGHT)
        self.labelname=Label(mid_left,font=("arial",15,"bold"),text="Name:",padx=2,pady=2,bg="white",fg="blue")
        self.labelname.grid(row=0,column=0,sticky=W)
        self.txtname=Entry(mid_left,font=("bold",20),textvariable=Name,width=25)
        self.txtname.grid(row=0,column=1,sticky=W)

        self.label_AD=Label(mid_left,font=("arial",15,"bold"),text="Adress:",padx=2,pady=2,bg="white",fg="blue")
        self.label_AD.grid(row=1,column=0,sticky=W)
        self.txt_AD=Entry(mid_left,font=("bold",20),textvariable=Adress,width=25)
        self.txt_AD.grid(row=1,column=1,sticky=W)

        self.label_Contact=Label(mid_left,font=("arial",15,"bold"),text="Contact:",padx=2,pady=2,bg="white",fg="blue")
        self.label_Contact.grid(row=2,column=0,sticky=W)
        self.txt_cont=Entry(mid_left,font=("bold",20),textvariable=contact,width=25)
        self.txt_cont.grid(row=2,column=1,sticky=W)

        self.label_age=Label(mid_left,font=("arial",15,"bold"),text="Age:",padx=2,pady=2,bg="white",fg="blue")
        self.label_age.grid(row=3,column=0,sticky=W)
        self.txt_age=Entry(mid_left,font=("bold",20),textvariable=Age,width=25)
        self.txt_age.grid(row=3,column=1,sticky=W)

        self.label_wt=Label(mid_left,font=("arial",15,"bold"),text="Weight:",padx=2,pady=2,bg="white",fg="blue")
        self.label_wt.grid(row=4,column=0,sticky=W)
        self.txt_wt=Entry(mid_left,font=("bold",20),textvariable=weight,width=25)
        self.txt_wt.grid(row=4,column=1,sticky=W)

        self.label_bl=Label(mid_left,font=("arial",15,"bold"),text="Blood Group:",padx=2,pady=2,bg="white",fg="blue")
        self.label_bl.grid(row=5,column=0,sticky=W)
        self.txt_bl=Entry(mid_left,font=("bold",20),textvariable=Blood_group,width=25)
        self.txt_bl.grid(row=5,column=1,sticky=W)

        self.label_id=Label(mid_left,font=("arial",15,"bold"),text="UserID:",padx=2,bg="white",fg="blue")
        self.label_id.grid(row=6,column=0,sticky=W)
        self.txt_id=Entry(mid_left,font=("bold",20),textvariable=userid,width=25)
        self.txt_id.grid(row=6,column=1,sticky=W)
        self.label_empty=Label(mid_left,padx=2,pady=2)
        self.label_empty.grid(row=7,column=0,sticky=W)
        self.label_empty1=Label(mid_left,padx=2,pady=2)
        self.label_empty1.grid(row=8,column=0,sticky=W)
        self.label_empty2=Label(mid_left,padx=2,pady=2)
        self.label_empty2.grid(row=9,column=0,sticky=W)
        scroll=Scrollbar(mid_right)
        scroll.grid(row=0,column=1,sticky="NS")
        donor_list=Listbox(mid_right,width=40,height=16,font=("italic",12),yscrollcommand=scroll.set)
        donor_list.grid(row=0,column=0,padx=8)
        scroll.config(command=donor_list.yview)
        self.inser=Button(frame_bottom,text="Insert",font=("bold",18),width=10,height=1,bd=4,command=insert)
        self.inser.grid(row=0,column=0)
        self.up=Button(frame_bottom,text="UPDATE",font=("bold",18),width=10,height=1,bd=4,command=update)
        self.up.grid(row=0,column=1)
        self.buttons2=Button(frame_bottom,text="SEARCH",font=("bold",18),width=10,height=1,bd=4,command=search)
        self.buttons2.grid(row=0,column=2)
        self.buttons3=Button(frame_bottom,text="DELETE",font=("bold",18),width=10,height=1,bd=4,command=delet)
        self.buttons3.grid(row=0,column=3)
        self.buttons5=Button(frame_bottom,text="SHOWDATA",font=("bold",18),width=10,height=1,bd=4,command=show)
        self.buttons5.grid(row=0,column=5)
   
if __name__=="__main__":
    root=Tk()
    obj=blood_bank(root)
    root.mainloop()